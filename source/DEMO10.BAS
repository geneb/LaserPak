'อออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออ
'  DEMO10.BAS: Demonstration of sample letter
             

'             (c) 1991, by R. F. Holcombe

'  IMPORTANT: The demos in this module use the laser printer,
'             make sure that it is on-line when needed.
'อออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออ

DECLARE SUB Demo1 ()
DECLARE SUB Demo2 ()
DECLARE FUNCTION DemoChoice% (choices$())

'$INCLUDE: 'laserpak.dec'
'$INCLUDE: 'fonts.dec'

   GOSUB run.demo

END
'อออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออ
'                             Demo Programs
'อออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออ
demo.1:     'Download the demo font
   CALL Demo1
RETURN

demo.2:     'Sample letter
   CALL Demo2
RETURN
'อออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออ

'อออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออ
run.demo:
'---Set up demo menu selection
   REDIM choice$(2)
      choice$(1) = "Download the Special Demonstration Font"
      choice$(2) = "Sample Letter with Graphics"

DO
   choice% = DemoChoice%(choice$())    'Select the demo to run

   LOCATE 2, 10
   PRINT TIME$; "  "; choice$(choice%); " demo commencing."
   bytecount& = 0                      'Initialize the number of bytes sent
   CALL PutCount(bytecount&)           'Save it in DOS buffer
                        'Execute the selected demo

   ON choice% GOSUB demo.1, demo.2

   CALL GetCount(bytecount&)           'Find out how many bytes were sent
   LOCATE CSRLIN, 10                   '  and, display it.
   IF bytecount& > 0 THEN PRINT TIME$; "  Demo over.  Bytes sent to printer/file:"; bytecount&
   LOCATE 20, 15: PRINT "Press any key to continue."
   DO WHILE INKEY$ = "": LOOP
LOOP
RETURN

SUB Demo1

   CALL FontCopy("demofont", 1, SPACE$(4096), 0)

END SUB

SUB Demo2

   fontfile$ = "demofont"

   filename$ = "lpdemo_1"
   lpi! = 6
   reverse% = 0
   handle% = OpenFile%(filename$)
   bytes& = DoPrint&(Resolution$(300) + PosCursor$(.5, .5))

'---Letterhead
   CALL PrintPCX("crescnt1.pcx", 0)
   bytes& = DoPrint&(PosCursor$(.5 + 434 / 300, .5) + GrayScale$(10 - 658 / 300, 472 / 300, 100))
   bytes& = DoPrint&(PosCursor$(10.5 - 224 / 300, .5))
   CALL PrintPCX("crescnt2.pcx", 0)

'---Fixed spacing
   bytes& = DoPrint&(FixedSpacing$ + PosCursor$(.75, 7.8) + FlushRight$("January 1, 1991", 10) + "January 1, 1991")
   bytes& = DoPrint&(PosCursor$(1.5, 2.3) + PushCursor$)
   REDIM text$(1): txtwidth! = 5.5: lpi! = 6: indent! = 0: justify% = 0: cpi! = 12
   text$(1) = "Dear Crescent Customer,"
   CALL FormatText(text$(), lpi!, txtwidth!, indent!, justify%, cpi!)
   bytes& = DoPrint&(LineFeed$(lpi!))
   REDIM text$(2): indent! = .25: justify% = -1
   text$(1) = "This is not only a self-running demonstration, it is also: SELF PROMOTING!!!  Everything on this"
   text$(1) = InsertBoldCode(text$(1), "SELF PROMOTING!!!")
   text$(2) = "page was created using tools in LaserPak.  Of course, this font is somewhat ugly, so let's switch to..."
   CALL FormatText(text$(), lpi!, txtwidth!, indent!, justify%, cpi!)
   bytes& = DoPrint&(LineFeed$(lpi!))

'---Proportional font
   REDIM pstab%(256)
   CALL CreatePSTable("demofont", pstab%())
   bytes& = DoPrint&(Proportional$)

   REDIM text$(5): indent! = .25: justify% = -1
   text$(1) = "Now, isn't this a lot better?  True, you could do the same thing on your"
   text$(2) = "favorite word processor, but now, you can control all the typesetting functions from"
   text$(3) = "within BASIC.  This will be invaluable when printing all kinds of documents,"
   text$(3) = InsertBoldCode$(text$(3), "BASIC")
   text$(4) = "such as charts, graphs, special graphics, logos, base forms, data printouts, and"
   text$(5) = "anything else that has to be printed from BASIC."
   text$(5) = InsertBoldCode$(text$(5), "BASIC")
   CALL FormatTextP(text$(), lpi!, txtwidth!, indent!, justify%, pstab%())
   bytes& = DoPrint&(LineFeed$(lpi!))

   REDIM text$(8)
   text$(1) = "In addition to normal text processing functions such as,"
   text$(2) = "underlining, bold face, and bold underlining, there is a powerful text formatter"
   text$(2) = InsertULCode$(text$(2), "underlining")
   text$(2) = InsertULCode$(text$(2), "bold underlining")
   text$(2) = InsertBoldCode$(text$(2), "bold face")
   text$(2) = InsertBoldCode$(text$(2), "bold underlining")
   text$(3) = "that features automatic word wrap, right justification, and print density maximization."
   text$(4) = "Other powerful advantages include the ability to mix text and graphics, and to include"
   text$(5) = "text and/or graphics that are generated by your programs."
   text$(6) = "Of course, there is the additional advantage of being able to use soft fonts with your programs."
   text$(7) = "Routines are provided to allow you to use proportionally spaced soft fonts with ease."
   text$(8) = "Some of the additional formatting capabilites are shown below."
   CALL FormatTextP(text$(), lpi!, txtwidth!, indent!, justify%, pstab%())
   bytes& = DoPrint&(LineFeed$(lpi!))

'---Shadow box
   CALL GetOffsets(vo%, ho%)
   ho% = ho% + 250
   CALL PutOffsets(vo%, ho%)
   bytes& = DoPrint&(MoveCursor$(0, .35))
   REDIM text$(1)
   text$(1) = "Here are some additional features:"
   CALL FormatTextP(text$(), lpi!, txtwidth!, indent!, justify%, pstab%())
   bytes& = DoPrint&(LineFeed$(lpi!) + MoveCursor$(0, indent!))
   txtwidth! = 4
   bytes& = DoPrint&(PosCursor$(0, 2.3 + indent!))
   text$(1) = "1.  Tab indents for numbered lists (such as this list)."
   text$(1) = InsertTabCode$(text$(1), "T")
   CALL FormatTextP(text$(), lpi!, txtwidth!, -indent!, justify%, pstab%())
   bytes& = DoPrint&(LineFeed$(lpi!))
   text$(1) = "2.  Centered text."
   text$(1) = InsertTabCode$(text$(1), "C")
   CALL FormatTextP(text$(), lpi!, txtwidth!, -indent!, justify%, pstab%())
   bytes& = DoPrint&(LineFeed$(lpi!))
   text$(1) = "3.  Horizontal alignment on a character, such as a decimal point:"
   text$(1) = InsertTabCode$(text$(1), "H")
   CALL FormatTextP(text$(), lpi!, txtwidth!, -indent!, justify%, pstab%())
   bytes& = DoPrint&(LineFeed$(lpi!))
   xpos! = 4: alchar$ = "."
   t$ = "$    123.45"
   bytes& = DoPrint&(AlignChar$(xpos!, t$, alchar$, pstab%()) + t$)
   bytes& = DoPrint&(LineFeed$(lpi!))
   t$ = "9.95"
   bytes& = DoPrint&(AlignChar$(xpos!, t$, alchar$, pstab%()) + t$)
   bytes& = DoPrint&(LineFeed$(lpi!))
   t$ = "29.99"
   bytes& = DoPrint&(UnderlineOn$ + AlignChar$(xpos!, t$, alchar$, pstab%()) + t$ + UnderlineOff$)
   bytes& = DoPrint&(LineFeed$(lpi!))
   t$ = "$    163.39"
   bytes& = DoPrint&(AlignChar$(xpos!, t$, alchar$, pstab%()) + t$)
   bytes& = DoPrint&(LineFeed$(lpi!) + PosCursor$(-1, 2.3 + indent!))
   bytes& = DoPrint&(LineFeed$(lpi!))
   text$(1) = "4.  The ability to combine bitmapped graphics images with text."
   text$(1) = InsertTabCode$(text$(1), "T")
   CALL FormatTextP(text$(), lpi!, txtwidth!, -indent!, justify%, pstab%())
   bytes& = DoPrint&(LineFeed$(lpi!))
   text$(1) = "5.  A set of line drawing tools that includes lines, circles, boxes, etc."
   text$(1) = InsertTabCode$(text$(1), "A")
   CALL FormatTextP(text$(), lpi!, txtwidth!, -indent!, justify%, pstab%())
   bytes& = DoPrint&(LineFeed$(lpi!))
   text$(1) = "6.  A series of geometric shapes are provided that can be filled with various shades and patterns."
   text$(1) = InsertTabCode$(text$(1), "A")
   CALL FormatTextP(text$(), lpi!, txtwidth!, -indent!, justify%, pstab%())
   bytes& = DoPrint&(LineFeed$(lpi!))
   bytes& = DoPrint&(PushCursor$ + PosCursor$(4.65, 2.3) + Rectangle$(3.35, 4.5, 3))
   bytes& = DoPrint&(PosCursor$(5.95, 2.3) + GrayScale$(.85, 4.5, 5))
   bytes& = DoPrint&(PosCursor$(4.8, 6.8) + GrayScale$(3.35, .15, 30))
   bytes& = DoPrint&(PosCursor$(8, 2.45) + GrayScale$(.15, 4.5, 30))
   bytes& = DoPrint&(PosCursor$(4.95, 6.95) + GrayScale$(3.35, .15, 100))
   bytes& = DoPrint&(PosCursor$(8.15, 2.6) + GrayScale$(.15, 4.5, 100))

   CALL GetOffsets(vo%, ho%)
   ho% = ho% - 250
   CALL PutOffsets(vo%, ho%)
   REDIM text$(3): indent! = .25: justify% = -1: txtwidth! = 5.5
   text$(1) = "Run the other demos to see some of the additional applications of LaserPak."
   text$(1) = InsertBoldCode$(text$(1), "LaserPak")
   text$(2) = "I hope you will enjoy using it.  In the future, we hope to have additional toolboxes devoted to the creation and modification of soft fonts,"
   text$(3) = "a graphing package that will be totally bitmapped, and a similar toolbox for dot matrix printers."
   bytes& = DoPrint&(PosCursor$(-1, 2.3))
   bytes& = DoPrint&(LineFeed$(lpi!))
   bytes& = DoPrint&(LineFeed$(lpi!))
   bytes& = DoPrint&(LineFeed$(lpi!))
   CALL FormatTextP(text$(), lpi!, txtwidth!, indent!, justify%, pstab%())
   bytes& = DoPrint&(LineFeed$(lpi!))

   REDIM text$(1)
   text$(1) = "Sincerely,"
   CALL FormatTextP(text$(), lpi!, txtwidth!, indent!, justify%, pstab%())
   bytes& = DoPrint&(LineFeed$(lpi!))

   bytes& = DoPrint&(PosCursor$(9.4, 2.5))
   CALL PrintPCX("signatur.pcx", 0)

   bytes& = DoPrint&(EjectPage$)
   CLOSE handle%
   CALL FontCopy(filename$, 1, SPACE$(4096), 0)    'Send it to the printer
EXIT SUB

END SUB

